class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        n = len(nums)
        for i in range(n - 1):              # time complexity: O(n^2)
            for j in range(i + 1, n):
                if nums[i] + nums[j] == target:
                    return [i, j]
        return [] 

        ''' seen={}
            for i , num in eneumerate(nums):           #time complexity: 0(n)  using hashmap 
                complement= target-num
                if complement in seen:
                    return [seen[complement], i]        # if arr is sorted use two pointers, time complecity: O(1)
                seen[num]=i'''
        

        
